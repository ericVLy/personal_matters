# Generated by Django 5.0.2 on 2024-03-06 11:02

import django.db.models.deletion
import wagtail.models
import wagtail.search.index
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ledger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', models.BooleanField(default=True, editable=False, verbose_name='live')),
                ('has_unpublished_changes', models.BooleanField(default=False, editable=False, verbose_name='has unpublished changes')),
                ('first_published_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='first published at')),
                ('last_published_at', models.DateTimeField(editable=False, null=True, verbose_name='last published at')),
                ('go_live_at', models.DateTimeField(blank=True, null=True, verbose_name='go live date/time')),
                ('expire_at', models.DateTimeField(blank=True, null=True, verbose_name='expiry date/time')),
                ('expired', models.BooleanField(default=False, editable=False, verbose_name='expired')),
                ('locked', models.BooleanField(default=False, editable=False, verbose_name='locked')),
                ('locked_at', models.DateTimeField(editable=False, null=True, verbose_name='locked at')),
                ('transaction_time', models.DateTimeField(verbose_name='交易时间')),
                ('transaction_category', models.CharField(choices=[('Cultural Leisure ', ' Cultural Leisure '), ('Investment and Wealth Management ', ' Investment and Wealth Management '), ('Catering Cuisine ', ' Catering Cuisine '), ('Recharge Payment ', ' Recharge Payment '), ('Revenue ', ' Revenue '), ('Home Furnishing ', ' Home Furnishing '), ('Credit Borrowing and Repayment ', ' Credit Borrowing and Repayment '), ('Transfer Red Envelope ', ' Transfer Red Envelope '), ('Refund ', ' Refund '), ('Hotel tourism ', ' Hotel tourism '), ('Dress up ', ' Dress up '), ('Life Services', 'Life Services'), ('Public Service ', ' Public Service '), ('Medical Health ', ' Medical Health '), ('Account Access', 'Account Access'), ('Beauty and hairdressing ', ' Beauty and hairdressing '), ('Transportation Travel ', ' Transportation Travel '), ('Business Services', 'Business Services'), ('Mother Infant Parent Child ', ' Mother Infant Parent Child '), ('Sports Outdoor ', ' Sports Outdoor '), ('Pet ', ' Pet '), ('Daily necessities', 'Daily necessities'), ('Digital Appliances', 'Digital Appliances'), ('Love car maintenance ', ' Love car maintenance '), ('Other ', ' Other ')], max_length=255, verbose_name='交易分类')),
                ('counterparty', models.CharField(blank=True, max_length=255, null=True, verbose_name='交易对方')),
                ('counterparty_account', models.CharField(blank=True, max_length=255, null=True, verbose_name='对方账号')),
                ('product_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='商品说明')),
                ('receipt_disbursement', models.CharField(choices=[('+', 'receipt'), ('-', 'disbursement')], max_length=255, verbose_name='收/支')),
                ('amount', models.PositiveBigIntegerField(verbose_name='金额')),
                ('receipt_payment_method', models.CharField(blank=True, max_length=255, null=True, verbose_name='收/付款方式')),
                ('transaction_status', models.CharField(max_length=255, verbose_name='交易状态')),
                ('transaction_order_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='交易订单号')),
                ('merchant_order_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='商家订单号')),
                ('remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('latest_revision', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='latest revision')),
                ('live_revision', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='live revision')),
                ('locked_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locked_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='locked by')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.models.WorkflowMixin, wagtail.models.PreviewableMixin, wagtail.search.index.Indexed, models.Model),
        ),
    ]
